policy_module(agenor, 1.100.1)

########################################
#
# Declarations
#

type agenor_t;
type agenor_exec_t;
init_daemon_domain(agenor_t, agenor_exec_t)

permissive agenor_t;

type agenor_initrc_exec_t;
init_script_file(agenor_initrc_exec_t)

type agenor_conf_t;
files_type(agenor_conf_t)

type agenor_var_lib_t;
files_type(agenor_var_lib_t)

type agenor_var_run_t;
files_type(agenor_var_run_t)

type agenor_port_t;
corenet_port(agenor_port_t)

########################################
#
# agenor local policy
#
allow agenor_t self:process { fork };

allow agenor_t self:fifo_file rw_fifo_file_perms;
allow agenor_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(agenor_t, agenor_conf_t, agenor_conf_t)
manage_files_pattern(agenor_t, agenor_conf_t, agenor_conf_t)

manage_dirs_pattern(agenor_t, agenor_var_lib_t, agenor_var_lib_t)
manage_files_pattern(agenor_t, agenor_var_lib_t, agenor_var_lib_t)
files_var_lib_filetrans(agenor_t, agenor_var_lib_t, { dir file })

manage_dirs_pattern(agenor_t, agenor_var_run_t, agenor_var_run_t)
manage_files_pattern(agenor_t, agenor_var_run_t, agenor_var_run_t)

sysnet_dns_name_resolve(agenor_t)
corenet_all_recvfrom_unlabeled(agenor_t)

allow agenor_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(agenor_t)
corenet_tcp_sendrecv_generic_node(agenor_t)
corenet_tcp_sendrecv_all_ports(agenor_t)
corenet_tcp_bind_generic_node(agenor_t)

gen_require(`
    type agenor_port_t;
')
allow agenor_t agenor_port_t:tcp_socket name_bind;

gen_require(`
    type agenor_port_t;
')
allow agenor_t agenor_port_t:tcp_socket name_connect;

domain_use_interactive_fds(agenor_t)

files_read_etc_files(agenor_t)

miscfiles_read_localization(agenor_t)

sysnet_dns_name_resolve(agenor_t)

allow agenor_t agenor_exec_t:file execute_no_trans;
allow agenor_t self:process setsched;
corecmd_exec_ls(agenor_t)
corenet_tcp_connect_http_port(agenor_t)
dev_read_urand(agenor_t)
fs_getattr_xattr_fs(agenor_t)
kernel_read_system_state(agenor_t)
